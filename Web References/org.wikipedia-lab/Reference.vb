'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
'
Namespace org.wikipedia_lab
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetCandidatesFromKeywordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTopCandidateIDFromKeywordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCandidateFromIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSynonymOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetThesaurusDSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetThesaurusDS4NetworkViewOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetThesaurusDSFromTitlesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetIDFromTitleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetIDFromTitleWithConnectOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTagCandidatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTagCandidatesExperimentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.HomePage2.My.MySettings.Default.HomePage2_org_wikipedia_lab_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetCandidatesFromKeywordCompleted As GetCandidatesFromKeywordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTopCandidateIDFromKeywordCompleted As GetTopCandidateIDFromKeywordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCandidateFromIDCompleted As GetCandidateFromIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSynonymCompleted As GetSynonymCompletedEventHandler
        
        '''<remarks/>
        Public Event GetThesaurusDSCompleted As GetThesaurusDSCompletedEventHandler
        
        '''<remarks/>
        Public Event GetThesaurusDS4NetworkViewCompleted As GetThesaurusDS4NetworkViewCompletedEventHandler
        
        '''<remarks/>
        Public Event GetThesaurusDSFromTitlesCompleted As GetThesaurusDSFromTitlesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetIDFromTitleCompleted As GetIDFromTitleCompletedEventHandler
        
        '''<remarks/>
        Public Event GetIDFromTitleWithConnectCompleted As GetIDFromTitleWithConnectCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTagCandidatesCompleted As GetTagCandidatesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTagCandidatesExperimentCompleted As GetTagCandidatesExperimentCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCandidatesFromKeyword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCandidatesFromKeyword(ByVal Keyword As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCandidatesFromKeyword", New Object() {Keyword})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetCandidatesFromKeyword(ByVal Keyword As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetCandidatesFromKeyword", New Object() {Keyword}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetCandidatesFromKeyword(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCandidatesFromKeywordAsync(ByVal Keyword As String)
            Me.GetCandidatesFromKeywordAsync(Keyword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCandidatesFromKeywordAsync(ByVal Keyword As String, ByVal userState As Object)
            If (Me.GetCandidatesFromKeywordOperationCompleted Is Nothing) Then
                Me.GetCandidatesFromKeywordOperationCompleted = AddressOf Me.OnGetCandidatesFromKeywordOperationCompleted
            End If
            Me.InvokeAsync("GetCandidatesFromKeyword", New Object() {Keyword}, Me.GetCandidatesFromKeywordOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCandidatesFromKeywordOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCandidatesFromKeywordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCandidatesFromKeywordCompleted(Me, New GetCandidatesFromKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTopCandidateIDFromKeyword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTopCandidateIDFromKeyword(ByVal Keyword As String) As UInteger
            Dim results() As Object = Me.Invoke("GetTopCandidateIDFromKeyword", New Object() {Keyword})
            Return CType(results(0),UInteger)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTopCandidateIDFromKeyword(ByVal Keyword As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTopCandidateIDFromKeyword", New Object() {Keyword}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTopCandidateIDFromKeyword(ByVal asyncResult As System.IAsyncResult) As UInteger
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),UInteger)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTopCandidateIDFromKeywordAsync(ByVal Keyword As String)
            Me.GetTopCandidateIDFromKeywordAsync(Keyword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTopCandidateIDFromKeywordAsync(ByVal Keyword As String, ByVal userState As Object)
            If (Me.GetTopCandidateIDFromKeywordOperationCompleted Is Nothing) Then
                Me.GetTopCandidateIDFromKeywordOperationCompleted = AddressOf Me.OnGetTopCandidateIDFromKeywordOperationCompleted
            End If
            Me.InvokeAsync("GetTopCandidateIDFromKeyword", New Object() {Keyword}, Me.GetTopCandidateIDFromKeywordOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTopCandidateIDFromKeywordOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTopCandidateIDFromKeywordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTopCandidateIDFromKeywordCompleted(Me, New GetTopCandidateIDFromKeywordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCandidateFromID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCandidateFromID(ByVal ID As UInteger) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCandidateFromID", New Object() {ID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetCandidateFromID(ByVal ID As UInteger, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetCandidateFromID", New Object() {ID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetCandidateFromID(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCandidateFromIDAsync(ByVal ID As UInteger)
            Me.GetCandidateFromIDAsync(ID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCandidateFromIDAsync(ByVal ID As UInteger, ByVal userState As Object)
            If (Me.GetCandidateFromIDOperationCompleted Is Nothing) Then
                Me.GetCandidateFromIDOperationCompleted = AddressOf Me.OnGetCandidateFromIDOperationCompleted
            End If
            Me.InvokeAsync("GetCandidateFromID", New Object() {ID}, Me.GetCandidateFromIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCandidateFromIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCandidateFromIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCandidateFromIDCompleted(Me, New GetCandidateFromIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSynonym", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSynonym(ByVal iID As UInteger) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetSynonym", New Object() {iID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetSynonym(ByVal iID As UInteger, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetSynonym", New Object() {iID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetSynonym(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSynonymAsync(ByVal iID As UInteger)
            Me.GetSynonymAsync(iID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSynonymAsync(ByVal iID As UInteger, ByVal userState As Object)
            If (Me.GetSynonymOperationCompleted Is Nothing) Then
                Me.GetSynonymOperationCompleted = AddressOf Me.OnGetSynonymOperationCompleted
            End If
            Me.InvokeAsync("GetSynonym", New Object() {iID}, Me.GetSynonymOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSynonymOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSynonymCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSynonymCompleted(Me, New GetSynonymCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetThesaurusDS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetThesaurusDS(ByVal iType As Integer, ByVal iFrom As UInteger, ByVal iOffset As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetThesaurusDS", New Object() {iType, iFrom, iOffset})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetThesaurusDS(ByVal iType As Integer, ByVal iFrom As UInteger, ByVal iOffset As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetThesaurusDS", New Object() {iType, iFrom, iOffset}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetThesaurusDS(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetThesaurusDSAsync(ByVal iType As Integer, ByVal iFrom As UInteger, ByVal iOffset As Integer)
            Me.GetThesaurusDSAsync(iType, iFrom, iOffset, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetThesaurusDSAsync(ByVal iType As Integer, ByVal iFrom As UInteger, ByVal iOffset As Integer, ByVal userState As Object)
            If (Me.GetThesaurusDSOperationCompleted Is Nothing) Then
                Me.GetThesaurusDSOperationCompleted = AddressOf Me.OnGetThesaurusDSOperationCompleted
            End If
            Me.InvokeAsync("GetThesaurusDS", New Object() {iType, iFrom, iOffset}, Me.GetThesaurusDSOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetThesaurusDSOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetThesaurusDSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetThesaurusDSCompleted(Me, New GetThesaurusDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetThesaurusDS4NetworkView", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetThesaurusDS4NetworkView(ByVal iFrom As UInteger) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetThesaurusDS4NetworkView", New Object() {iFrom})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetThesaurusDS4NetworkView(ByVal iFrom As UInteger, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetThesaurusDS4NetworkView", New Object() {iFrom}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetThesaurusDS4NetworkView(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetThesaurusDS4NetworkViewAsync(ByVal iFrom As UInteger)
            Me.GetThesaurusDS4NetworkViewAsync(iFrom, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetThesaurusDS4NetworkViewAsync(ByVal iFrom As UInteger, ByVal userState As Object)
            If (Me.GetThesaurusDS4NetworkViewOperationCompleted Is Nothing) Then
                Me.GetThesaurusDS4NetworkViewOperationCompleted = AddressOf Me.OnGetThesaurusDS4NetworkViewOperationCompleted
            End If
            Me.InvokeAsync("GetThesaurusDS4NetworkView", New Object() {iFrom}, Me.GetThesaurusDS4NetworkViewOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetThesaurusDS4NetworkViewOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetThesaurusDS4NetworkViewCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetThesaurusDS4NetworkViewCompleted(Me, New GetThesaurusDS4NetworkViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetThesaurusDSFromTitles", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetThesaurusDSFromTitles(ByVal iType As Integer, ByVal sTitles() As String, ByVal iOffset As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetThesaurusDSFromTitles", New Object() {iType, sTitles, iOffset})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetThesaurusDSFromTitles(ByVal iType As Integer, ByVal sTitles() As String, ByVal iOffset As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetThesaurusDSFromTitles", New Object() {iType, sTitles, iOffset}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetThesaurusDSFromTitles(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetThesaurusDSFromTitlesAsync(ByVal iType As Integer, ByVal sTitles() As String, ByVal iOffset As Integer)
            Me.GetThesaurusDSFromTitlesAsync(iType, sTitles, iOffset, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetThesaurusDSFromTitlesAsync(ByVal iType As Integer, ByVal sTitles() As String, ByVal iOffset As Integer, ByVal userState As Object)
            If (Me.GetThesaurusDSFromTitlesOperationCompleted Is Nothing) Then
                Me.GetThesaurusDSFromTitlesOperationCompleted = AddressOf Me.OnGetThesaurusDSFromTitlesOperationCompleted
            End If
            Me.InvokeAsync("GetThesaurusDSFromTitles", New Object() {iType, sTitles, iOffset}, Me.GetThesaurusDSFromTitlesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetThesaurusDSFromTitlesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetThesaurusDSFromTitlesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetThesaurusDSFromTitlesCompleted(Me, New GetThesaurusDSFromTitlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIDFromTitle", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetIDFromTitle(ByVal sTitle As String) As UInteger
            Dim results() As Object = Me.Invoke("GetIDFromTitle", New Object() {sTitle})
            Return CType(results(0),UInteger)
        End Function
        
        '''<remarks/>
        Public Function BeginGetIDFromTitle(ByVal sTitle As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetIDFromTitle", New Object() {sTitle}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetIDFromTitle(ByVal asyncResult As System.IAsyncResult) As UInteger
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),UInteger)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetIDFromTitleAsync(ByVal sTitle As String)
            Me.GetIDFromTitleAsync(sTitle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetIDFromTitleAsync(ByVal sTitle As String, ByVal userState As Object)
            If (Me.GetIDFromTitleOperationCompleted Is Nothing) Then
                Me.GetIDFromTitleOperationCompleted = AddressOf Me.OnGetIDFromTitleOperationCompleted
            End If
            Me.InvokeAsync("GetIDFromTitle", New Object() {sTitle}, Me.GetIDFromTitleOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetIDFromTitleOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetIDFromTitleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetIDFromTitleCompleted(Me, New GetIDFromTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetIDFromTitleWithConnect", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetIDFromTitleWithConnect(ByVal sTitle As String) As UInteger
            Dim results() As Object = Me.Invoke("GetIDFromTitleWithConnect", New Object() {sTitle})
            Return CType(results(0),UInteger)
        End Function
        
        '''<remarks/>
        Public Function BeginGetIDFromTitleWithConnect(ByVal sTitle As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetIDFromTitleWithConnect", New Object() {sTitle}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetIDFromTitleWithConnect(ByVal asyncResult As System.IAsyncResult) As UInteger
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),UInteger)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetIDFromTitleWithConnectAsync(ByVal sTitle As String)
            Me.GetIDFromTitleWithConnectAsync(sTitle, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetIDFromTitleWithConnectAsync(ByVal sTitle As String, ByVal userState As Object)
            If (Me.GetIDFromTitleWithConnectOperationCompleted Is Nothing) Then
                Me.GetIDFromTitleWithConnectOperationCompleted = AddressOf Me.OnGetIDFromTitleWithConnectOperationCompleted
            End If
            Me.InvokeAsync("GetIDFromTitleWithConnect", New Object() {sTitle}, Me.GetIDFromTitleWithConnectOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetIDFromTitleWithConnectOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetIDFromTitleWithConnectCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetIDFromTitleWithConnectCompleted(Me, New GetIDFromTitleWithConnectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTagCandidates", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTagCandidates(ByVal PatternHead As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTagCandidates", New Object() {PatternHead})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTagCandidates(ByVal PatternHead As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTagCandidates", New Object() {PatternHead}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTagCandidates(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTagCandidatesAsync(ByVal PatternHead As String)
            Me.GetTagCandidatesAsync(PatternHead, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTagCandidatesAsync(ByVal PatternHead As String, ByVal userState As Object)
            If (Me.GetTagCandidatesOperationCompleted Is Nothing) Then
                Me.GetTagCandidatesOperationCompleted = AddressOf Me.OnGetTagCandidatesOperationCompleted
            End If
            Me.InvokeAsync("GetTagCandidates", New Object() {PatternHead}, Me.GetTagCandidatesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTagCandidatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTagCandidatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTagCandidatesCompleted(Me, New GetTagCandidatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTagCandidatesExperiment", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTagCandidatesExperiment(ByVal PatternHead As String, ByVal DisplayType As Integer, ByVal SearchType As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetTagCandidatesExperiment", New Object() {PatternHead, DisplayType, SearchType})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTagCandidatesExperiment(ByVal PatternHead As String, ByVal DisplayType As Integer, ByVal SearchType As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTagCandidatesExperiment", New Object() {PatternHead, DisplayType, SearchType}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTagCandidatesExperiment(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTagCandidatesExperimentAsync(ByVal PatternHead As String, ByVal DisplayType As Integer, ByVal SearchType As Integer)
            Me.GetTagCandidatesExperimentAsync(PatternHead, DisplayType, SearchType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTagCandidatesExperimentAsync(ByVal PatternHead As String, ByVal DisplayType As Integer, ByVal SearchType As Integer, ByVal userState As Object)
            If (Me.GetTagCandidatesExperimentOperationCompleted Is Nothing) Then
                Me.GetTagCandidatesExperimentOperationCompleted = AddressOf Me.OnGetTagCandidatesExperimentOperationCompleted
            End If
            Me.InvokeAsync("GetTagCandidatesExperiment", New Object() {PatternHead, DisplayType, SearchType}, Me.GetTagCandidatesExperimentOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTagCandidatesExperimentOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTagCandidatesExperimentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTagCandidatesExperimentCompleted(Me, New GetTagCandidatesExperimentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetCandidatesFromKeywordCompletedEventHandler(ByVal sender As Object, ByVal e As GetCandidatesFromKeywordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCandidatesFromKeywordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetTopCandidateIDFromKeywordCompletedEventHandler(ByVal sender As Object, ByVal e As GetTopCandidateIDFromKeywordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTopCandidateIDFromKeywordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UInteger
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UInteger)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetCandidateFromIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetCandidateFromIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCandidateFromIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetSynonymCompletedEventHandler(ByVal sender As Object, ByVal e As GetSynonymCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSynonymCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetThesaurusDSCompletedEventHandler(ByVal sender As Object, ByVal e As GetThesaurusDSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetThesaurusDSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetThesaurusDS4NetworkViewCompletedEventHandler(ByVal sender As Object, ByVal e As GetThesaurusDS4NetworkViewCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetThesaurusDS4NetworkViewCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetThesaurusDSFromTitlesCompletedEventHandler(ByVal sender As Object, ByVal e As GetThesaurusDSFromTitlesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetThesaurusDSFromTitlesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetIDFromTitleCompletedEventHandler(ByVal sender As Object, ByVal e As GetIDFromTitleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetIDFromTitleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UInteger
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UInteger)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetIDFromTitleWithConnectCompletedEventHandler(ByVal sender As Object, ByVal e As GetIDFromTitleWithConnectCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetIDFromTitleWithConnectCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UInteger
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UInteger)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetTagCandidatesCompletedEventHandler(ByVal sender As Object, ByVal e As GetTagCandidatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTagCandidatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetTagCandidatesExperimentCompletedEventHandler(ByVal sender As Object, ByVal e As GetTagCandidatesExperimentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTagCandidatesExperimentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
