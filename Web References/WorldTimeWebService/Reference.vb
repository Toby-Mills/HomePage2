'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
'
Namespace WorldTimeWebService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WorldTimeWebServiceSoap", [Namespace]:="http://www.quantumsoftware.com.au/WorldTimeWebService/")>  _
    Partial Public Class WorldTimeWebService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetTimeZonesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTimeZoneInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://www.quantumsoftware.com.au/WorldTimeWebService/WorldTimeWebService.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetTimeZonesCompleted As GetTimeZonesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTimeZoneInfoCompleted As GetTimeZoneInfoCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.quantumsoftware.com.au/WorldTimeWebService/GetTimeZones", RequestNamespace:="http://www.quantumsoftware.com.au/WorldTimeWebService/", ResponseNamespace:="http://www.quantumsoftware.com.au/WorldTimeWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimeZones() As TimeZoneInfo()
            Dim results() As Object = Me.Invoke("GetTimeZones", New Object(-1) {})
            Return CType(results(0),TimeZoneInfo())
        End Function
        
        '''<remarks/>
        Public Function BeginGetTimeZones(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTimeZones", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTimeZones(ByVal asyncResult As System.IAsyncResult) As TimeZoneInfo()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),TimeZoneInfo())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimeZonesAsync()
            Me.GetTimeZonesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimeZonesAsync(ByVal userState As Object)
            If (Me.GetTimeZonesOperationCompleted Is Nothing) Then
                Me.GetTimeZonesOperationCompleted = AddressOf Me.OnGetTimeZonesOperationCompleted
            End If
            Me.InvokeAsync("GetTimeZones", New Object(-1) {}, Me.GetTimeZonesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimeZonesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimeZonesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimeZonesCompleted(Me, New GetTimeZonesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.quantumsoftware.com.au/WorldTimeWebService/GetTimeZoneInfo", RequestNamespace:="http://www.quantumsoftware.com.au/WorldTimeWebService/", ResponseNamespace:="http://www.quantumsoftware.com.au/WorldTimeWebService/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTimeZoneInfo(ByVal timeZoneName As String) As TimeZoneInfo
            Dim results() As Object = Me.Invoke("GetTimeZoneInfo", New Object() {timeZoneName})
            Return CType(results(0),TimeZoneInfo)
        End Function
        
        '''<remarks/>
        Public Function BeginGetTimeZoneInfo(ByVal timeZoneName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTimeZoneInfo", New Object() {timeZoneName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetTimeZoneInfo(ByVal asyncResult As System.IAsyncResult) As TimeZoneInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),TimeZoneInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTimeZoneInfoAsync(ByVal timeZoneName As String)
            Me.GetTimeZoneInfoAsync(timeZoneName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTimeZoneInfoAsync(ByVal timeZoneName As String, ByVal userState As Object)
            If (Me.GetTimeZoneInfoOperationCompleted Is Nothing) Then
                Me.GetTimeZoneInfoOperationCompleted = AddressOf Me.OnGetTimeZoneInfoOperationCompleted
            End If
            Me.InvokeAsync("GetTimeZoneInfo", New Object() {timeZoneName}, Me.GetTimeZoneInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTimeZoneInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTimeZoneInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTimeZoneInfoCompleted(Me, New GetTimeZoneInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.quantumsoftware.com.au/WorldTimeWebService/")>  _
    Partial Public Class TimeZoneInfo
        
        Private nameField As String
        
        Private daylightNameField As String
        
        Private standardNameField As String
        
        Private displayNameField As String
        
        Private utcOffsetTicksField As Long
        
        Private currentTimeTicksField As Long
        
        Private isInDaylightSavingField As Boolean
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DaylightName() As String
            Get
                Return Me.daylightNameField
            End Get
            Set
                Me.daylightNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StandardName() As String
            Get
                Return Me.standardNameField
            End Get
            Set
                Me.standardNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisplayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set
                Me.displayNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UtcOffsetTicks() As Long
            Get
                Return Me.utcOffsetTicksField
            End Get
            Set
                Me.utcOffsetTicksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrentTimeTicks() As Long
            Get
                Return Me.currentTimeTicksField
            End Get
            Set
                Me.currentTimeTicksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsInDaylightSaving() As Boolean
            Get
                Return Me.isInDaylightSavingField
            End Get
            Set
                Me.isInDaylightSavingField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetTimeZonesCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimeZonesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimeZonesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TimeZoneInfo()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TimeZoneInfo())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetTimeZoneInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetTimeZoneInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTimeZoneInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TimeZoneInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TimeZoneInfo)
            End Get
        End Property
    End Class
End Namespace
